<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezen.spring.project.shop.MemberMapper">
		<select id="getBoard"
			parameterType="String"
			resultType="com.ezen.spring.project.shop.MemberVO">
			SELECT * FROM member WHERE memberID=#{memberID}
		</select>

		<insert id="join"
			useGeneratedKeys="true" keyProperty="memberNum"
			parameterType="com.ezen.spring.project.shop.MemberVO">
			INSERT INTO member VALUES(null,#{memberName},#{memberPhone},#{memberAddress},#{memberID},
			#{memberPwd},#{memberEmail},#{memberSex},#{memberBirth},#{national},0,0,0,#{interest})		
		</insert>	
		
		<update id="updateUser" parameterType="com.ezen.spring.project.shop.MemberVO">
			UPDATE member SET memberName=#{memberName}, memberEmail=#{memberEmail} WHERE memberID=#{memberID}
		</update>
		
		<select id="login"
			parameterType="com.ezen.spring.project.shop.MemberVO"
			resultType="com.ezen.spring.project.shop.MemberVO">
			SELECT * FROM member WHERE memberID=#{memberID} and memberPwd=#{memberPwd}
		</select>
		
		<select id="findIdresult" parameterType="com.ezen.spring.project.shop.MemberVO" resultType="com.ezen.spring.project.shop.MemberVO">
			SELECT memberID FROM member WHERE memberEmail=#{memberEmail}
		</select>
		
		<select id="findPwdresult" parameterType="com.ezen.spring.project.shop.MemberVO" resultType="com.ezen.spring.project.shop.MemberVO">
			SELECT memberPwd FROM member WHERE memberID=#{memberID} and memberName=#{memberName}
		</select>
		
		<delete id="deleteUser" parameterType="Integer">
			DELETE FROM member WHERE memberNum=#{memberNum}
		</delete>
		
		<update id="updateUserSavingsAndPoints" parameterType="com.ezen.spring.project.shop.MemberVO">
			UPDATE member SET saveMoney=#{saveMoney}, point=#{point} WHERE memberID=#{memberID}
		</update>
		
		<update id="markAttendance">
		    INSERT INTO attendance (memberID, attend_count, attendance_date)
		    VALUES (#{memberID}, 1, CURDATE())
		    ON DUPLICATE KEY UPDATE
		    attend_count = attend_count + 1
		</update>

		<select id="getAttendanceCount" resultType="int">
		    SELECT COUNT(attendance_date) as attend_count
		    FROM attendance
		    WHERE memberID = #{memberID}
		</select>
		
		<update id="saveAttendanceReward">
		    UPDATE member
		    SET point = saveMoney + #{saveMoney}
		    WHERE memberID = #{memberID}
		</update>
		
		<select id="getAttendanceData" resultType="HashMap">
		    SELECT attendance_date AS date, attended
		    FROM attendance
		    WHERE memberID = #{memberID}
		</select>
		
		<select id="hasAlreadyCheckedIn" resultType="boolean" parameterType="string">
		    SELECT
		        CASE
		            WHEN COUNT(*) >= 1 THEN TRUE
		            ELSE FALSE
		        END
		    FROM
		        attendance
		    WHERE
		        memberID = #{uid}
		        AND attendance_date = CURDATE()
		</select>
		
		<select id="getCheckedInDates" resultType="string" parameterType="string">
		    SELECT DATE_FORMAT(attendance_date, '%Y-%m-%d') as attendance_date
		    FROM attendance
		    WHERE memberID = #{uid}
		</select>
</mapper>